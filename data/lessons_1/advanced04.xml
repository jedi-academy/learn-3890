<?xml version="1.0" encoding="UTF-8"?>
<!--
AJAX
-->
<lesson status="1.2">
    <!-- Activity metadata ... override anything from the course or organizer -->

    <slide title="Agenda" layout="normal">
        <ol>
            <li>
                <a href="#{tag3}">AJAX - Whatzit?</a>
            </li>
             <li>
                <a href="#{tag4}">AJAX Issues</a>
            </li>
            <li>
                <a href="#{tag5}">AJAX and CodeIgniter</a>
            </li>
        </ol>
    </slide>


    <slide title="AJAX - WHATZIT?" layout="normal" tag="tag3">
        <ul>
            <li>Asynchronous (content loading)‏</li>
            <li>Javascript (logic &amp; control)‏</li>
            <li>And</li>
            <li>XML (request handling)‏</li>
        </ul>
        <p>We care because AJAX is often used for client-side
        REST requests.</p>
        <p>Some observations follow.</p>
    </slide>

    <slide title="AJAX - Really?" layout="normal">
        <ul>
            <li>Set of cross-platform conventions and techniques to load data 
                browser-side, without interfering with the display and 
                behavior of the existing page‏</li>
            <li>Relies on Javascript &amp; the DOM, assumes XHTML &amp; CSS used‏</li>
            <li>XMLHttpRequest object in browser</li>
        </ul>
    </slide>

    <slide title="HTTP Transport with AJAX" layout="normal" >
      <br/>
        <img class="scale" width="475" height="455" src="/pix/lessons/j4.png"/>
    </slide>

    <slide title="XmlHttpRequest" layout="normal">
        <ul>
            <li>Browser object to retrieve content from server page was dished from‏</li>
            <li>Need a new such object for each request</li>
            <li>Uses a callback mechanism when the HTTP request state changes</li>
        </ul>
    </slide>

    <slide title="AJAX ISSUES" layout="normal" tag="tag4">
        <ul>
            <li>Browser integration: Back-button, Bookmark ease,
Javascript enabled</li>
            <li>Reponse time concerns (separate HTTP requests, frequency)</li>
            <li>Reliance on Javascript &amp; DOM (has to be enabled, must be well-formed)</li>
            <li>Web analytics (based on page requests)</li>
        </ul>
        <p>Bottom line: use a Javascript framework with good support for it!</p>
    </slide>

    <slide title="AJAX WITH CODEIGNTIER" layout="normal" tag="tag6">
        <p>Hard to distinguish an incoming AJAX request ...
            <code>$this-&gt;input-&gt;is_ajax_request()</code>
        can be spoofed.</p>
        <p>Follow conventions, return "AJAX" object, not HTML page -
        designate a controller or sub-controller as one intended to handle
        an AJAX request.</p>
        <p>Publish your own "protocol", eg. method X will return XML/JSON/HTML fragment</p>
    </slide>

</lesson>
