<?xml version="1.0" encoding="UTF-8"?>
<!--
Views - Form Handling
-->
<lesson status="2.1">
    <slide title="Golden Rules" layout="normal">
        <ul>
            <li>No PHP in the views</li>
            <li>No HTML in the controllers!</li>
            <li>Think model-view-adapter!</li>
        </ul>
        <p>
            <em>These support "separation of concerns".<br/>
        These are not CodeIgniter-specific. They apply to multiple
        frameworks and languages.<br/>
        <strong>This is a "web thing"!</strong></em>
        </p>
    </slide>

    <slide title="Working with HTML Forms" layout="normal" tag="tag1">
        <p>HTML form handling is really two separate issues:
            <ul>
                <li>Generating the form to be completed, and then</li>
                <li>Handling submitted input</li>
            </ul>
        </p>
        <p>There are a number of strategies that can be used for each
            of these broad topics. This lesson will deal with creating a form,
            and the next lesson will deal with handling submitted data.</p>
        <p>
            <i>This lesson lends itself more to an in-class
                presentation, with explanation of the pros and cons of
                each of the techniques. There is no single right answer
                for all circumstances!
                Don't get hung on on the misformatting ... the slides are cues to
                check out specific pieces of the example webapp!!</i>
        </p>
    </slide>

    <slide title="Demo Webapp" layout="normal">
        <div class="left">
            <p>I have made an <a href="https://github.com/jedi-academy/example-forms" target="_blank">example-forms</a>
                repository, to demonstrate the techniques discussed this week.
            </p>
            <p>The homepage for it, when run as a webapp, provides links to
                pages that support the presentations. This lesson is supported
                by the first homepage link, "Generating HTML forms".</p>
            <p>The numbered links on the homepage may change, as the lessons
                evolve, but the gist is the same. Each link
                takes you to a controller which supports a specific part
                of the lessons.</p>
        </div>
        <div class="right">
            <br/>
            <img class="scale" src="/pix/lessons/forms/f00.png"/>
        </div>
    </slide>

    <slide title="Generating HTML" layout="normal">
        <div class="left">
            <p>This lesson is supported
                by the first homepage link, "Generating HTML forms",
                which is implemented by the <code>Generating</code> controller.
            </p>
            <p>Each of the menu items, on the left side, trigger the processing
                and creating of an HTML form, but using a different technique.
                The results are shown to the right, and they should purposefully
                all look pretty similar ... the difference is in the code :-/</p>
            <p>The HTML form is intended to provide an excuse for each of the
                common HTML form elements, and is not meant to be taken seriously!</p>
        </div>
        <div class="right">
            <br/>
            <img class="scale" src="/pix/lessons/forms/f01.png"/>
        </div>
    </slide>

    <slide title="Basic Form (p01)" layout="normal">
        <div class="left">
            <p>You could always build a form in pure HTML, right?</p>
            <p>It doesn't get much simpler for our code:</p>
            <code>$this->load->view("bob/p01");</code>
        </div>
        <div class="right">
            In the view:<pre><code>
&lt;h2&gt;Build Your Coffee &lt;img src="/images/logo.png"/&gt;&lt;/h2&gt;
&lt;form method="post" action="/generating/showme"&gt;
    Your name: &lt;input type="text" name="name"/&gt;&lt;br/&gt;
    Size: &lt;input type="radio" name="size" value="sm" checked&gt; Small&lt;/input&gt;
        &lt;input type="radio" name="size" value="md"/&gt; Medium
        &lt;input type="radio" name="size" value="lg"/&gt; Large
        &lt;input type="radio" name="size" value="hu"/&gt; Ludicrous&lt;br/&gt;
    Cup composition: &lt;select name="cup"&gt;
        &lt;option value="paper"&gt;Paper&lt;/option&gt;
        &lt;option value="steel"&gt;Stainless&lt;/option&gt;
        &lt;option value="glaze"&gt;Porcelain&lt;/option&gt;
&lt;/select&gt;&lt;br/&gt;
                    ...        </code>
            </pre>
        </div>
    </slide>

    <slide title="Use the HTML Helper (p02)" layout="normal">
        <div class="left">
            <p>CodeIgniter has an 
                <a href="http://www.codeigniter.com/user_guide/helpers/html_helper.html" target="_blank">HTML helper</a>, 
                which could simplify the
                view a bit, but it doesn't do much for our code.</p>
            In the controller:<pre>
                <code>
$this->load->helper('html');
$parms = array(
    'heading' => heading('Build Your Coffee ' . img("images/logo.png"), 2)
);
$this->parser->parse("bob/p02", $parms);
                </code>
            </pre>
            <p>Note that we are now using the template parser, for substitutions.</p>
        </div>
        <div class="right">
            In the view:<pre>
                <code>
                    {heading}
&lt;form method="post" action="/generating/showme"&gt;
    Your name: &lt;input type="text" name="name"/&gt;&lt;br/&gt;
    Size: &lt;input type="radio" name="size" value="sm" checked&gt; Small&lt;/input&gt;
	&lt;input type="radio" name="size" value="md"/&gt; Medium
	&lt;input type="radio" name="size" value="lg"/&gt; Large
	&lt;input type="radio" name="size" value="hu"/&gt; Ludicrous&lt;br/&gt;
    Cup composition: &lt;select name="cup"&gt;
            &lt;option value="paper"&gt;Paper&lt;/option&gt;
            &lt;option value="steel"&gt;Stainless&lt;/option&gt;
            &lt;option value="glaze"&gt;Porcelain&lt;/option&gt;
&lt;/select&gt;&lt;br/&gt;
                    ...        </code>
            </pre>
        </div>
    </slide>

    <slide title="Use the Form Helper (p03/p04)" layout="normal">
        <div class="left">
            <p>CodeIgniter has a <a href="http://www.codeigniter.com/user_guide/helpers/form_helper.html" target="_blank">Form helper</a> 
                too, which let's us
                have a substantially simpler view (shown below),
                at the expense of code complexity (shown right).</p>
            In the view:<pre>
                <code>
{heading}
{theform}
                 </code>
            </pre>
        </div>
        <div class="right">
            In the controller:<pre>
                <code>
$this->load->helper(['html', 'form']);
$forming = form_open("/generating/showme");
$forming .= form_label('Your name: ');
$forming .= form_input(['name' => 'name']) . br();
$forming .= form_label('Size: ');
$forming .= form_radio('size', 'sm') . form_label('Small');
$forming .= form_radio('size', 'md') . form_label('Medium');
$forming .= form_radio('size', 'lg', true) . form_label('Large');
$forming .= form_radio('size', 'hu') . form_label('Ludicrous') . br();
$forming .= form_label('Cup composition: ');
$forming .= form_dropdown('cup', ['paper' => 'Paper', 'steel' => 'Stainless', 'glaze' => 'Porcelain']) . br();
$forming .= form_label('Options? ');
$forming .= form_checkbox('opt1', true, true) . ' Caramel sauce';
$forming .= form_checkbox('opt2', false, false) . ' Sprinkles';
$forming .= form_checkbox('opt3', true, true) . ' Ketchup' . br();
                    ...        </code>
            </pre>
        </div>
    </slide>

    <slide title="Adding data (p05)" layout="normal">
        <div class="left">
            <p>Regardless of the general strategy, we want
                to incorporate some data. I have setup a 
                <code>$starter</code> object to work with, in
                all of the forms.
            That could be used inside a controller, as an array:</p>
            In the controller:<pre>
                <code>
$record = (array) $this->starter;
$recordParms = array(
    'name' => $record['name'], 'checked-' . $record['size'] => 'checked',
    'select-' . $record['cup'] => 'selected',
    'checked-opt1' => $record['opt1'] ? 'checked' : '',
    'checked-opt2' => $record['opt2'] ? 'checked' : '',
    'checked-opt3' => $record['opt3'] ? 'checked' : '',
    'extra' => $record['extra'], 'message' => $record['message']
);
$parms = array_merge($parms, $recordParms);
$this->parser->parse("bob/p05", $parms);                     
                </code>
            </pre>
        </div>
        <div class="right">
            In the view:<pre>
                <code>
&lt;form method="post" action="/generating/showme"&gt;
    Your name: &lt;input type="text" name="name" value="{name}"/&gt;&lt;br/&gt;
    Size: &lt;input type="radio" name="size" value="sm" {checked-sm}/&gt; Small
        &lt;input type="radio" name="size" value="md" {checked-md}/&gt; Medium
        &lt;input type="radio" name="size" value="lg" {checked-lg}/&gt; Large
        &lt;input type="radio" name="size" value="hu" {checked-hu}/&gt; Ludicrous&lt;br/&gt;
    Cup composition: &lt;select name="cup"&gt;
        &lt;option value="paper" {select-paper}&gt;Paper&lt;/option&gt;
        &lt;option value="steel" {select-steel}&gt;Stainless&lt;/option&gt;
        &lt;option value="glaze" {select-glaze}&gt;Porcelain&lt;/option&gt;
&lt;/select&gt;&lt;br/&gt;
                    ...        </code>
            </pre>
        </div>
    </slide>

    <slide title="Data in Object Form (p06)" layout="normal">
        <div class="left">
            <p>The data could also be used, inside our controller,
                as an object. The view would not change</p>
            In the controller:<pre>
                <code>
$record = $this->starter;
// make view parms for it
$recordParms = array(
    'name' => $record->name, 'checked-' . $record->size => 'checked',
    'select-' . $record->cup => 'selected',
    'checked-opt1' => $record->opt1 ? 'checked' : '',
    'checked-opt2' => $record->opt2 ? 'checked' : '',
    'checked-opt3' => $record->opt3 ? 'checked' : '',
    'extra' => $record->extra, 'message' => $record->message
);
// merge our view parms and go
$parms = array_merge($parms, $recordParms);
$this->parser->parse("bob/p05", $parms);                     
                </code>
            </pre>
        </div>
        <div class="right">
            In the view:<pre>
                <code>
&lt;form method="post" action="/generating/showme"&gt;
    Your name: &lt;input type="text" name="name" value="{name}"/&gt;&lt;br/&gt;
    Size: &lt;input type="radio" name="size" value="sm" {checked-sm}/&gt; Small
        &lt;input type="radio" name="size" value="md" {checked-md}/&gt; Medium
        &lt;input type="radio" name="size" value="lg" {checked-lg}/&gt; Large
        &lt;input type="radio" name="size" value="hu" {checked-hu}/&gt; Ludicrous&lt;br/&gt;
    Cup composition: &lt;select name="cup"&gt;
        &lt;option value="paper" {select-paper}&gt;Paper&lt;/option&gt;
        &lt;option value="steel" {select-steel}&gt;Stainless&lt;/option&gt;
        &lt;option value="glaze" {select-glaze}&gt;Porcelain&lt;/option&gt;
&lt;/select&gt;&lt;br/&gt;
                    ...        </code>
            </pre>
        </div>
    </slide>

    <slide title="Building Fields (p07)" layout="normal">
        <div class="left">
            <p>What does it look like when we use the Form helper
                to build fields to pass as view parameters?</p>
            In the controller:<pre>
                <code>
$record = $this->starter;
$parms = array(
    'heading' => heading('Build Your Coffee ' . img("images/logo.png"), 2),
    'fname' => 'Your name: ' . form_input(['name' => 'name'], $record->name) . br(),
    'fsize' => form_label('Size: ') .
        form_radio('size', 'sm', 'sm'==$record->size) . form_label('Small') .
        form_radio('size', 'md', 'md'==$record->size) . form_label('Medium') .
        form_radio('size', 'lg', 'lg'==$record->size) . form_label('Large') .
        form_radio('size', 'hu', 'hu'==$record->size) . form_label('Ludicrous') . br(),
    'fcup' => form_label('Cup composition: ') . form_dropdown('cup', 
        ['paper' => 'Paper', 'steel' => 'Stainless', 'glaze' => 'Porcelain'], $record->cup) . br(),
    'fopt1' => form_checkbox('opt1', 'sweet', $record->opt1) . ' Caramel sauce',
                    ...              </code>
            </pre>
        </div>
        <div class="right">
            In the view:<pre>
                <code>
{heading}

&lt;form method="post" action="/generating/showme"&gt;
    {fname}
    {fsize}
    {fcup}
    Options? {fopt1} {fopt2} {fopt3}
    {fextra}
    {fmessage}
    {fsubmit}
&lt;/form&gt;
                </code>
            </pre>
        </div>
    </slide>

    <slide title="Use Our Own Helper (p08)" layout="normal">
        <div class="left">
            <p>You might feel that the form helper is a bit clunky.
                You could always use a custom form helper
                (addressed in more detail next week)...</p>
            In the controller:<pre>
                <code>
$record = $this->starter;
$parms = array(
    'heading' => heading('Build Your Coffee ' . img("images/logo.png"), 2),
    'fname' => makeTextField('Your name: ','name', $record->name),
    'fsize' => makeRadioButtons('Size: ', 'size', $record->size, 
        ['sm'=>'Small', 'md'=>'Medium', 'lg'=>'Large', 'hu'=>'Ludicrous']),
    'fcup' => makeCombobox('Cup composition: ', 'cup', $record->cup, 
        ['paper' => 'Paper', 'steel' => 'Stainless', 'glaze' => 'Porcelain']),
    'fopt1' => makeCheckbox('Caramel sauce', 'opt1', $record->opt1),
    'fopt2' => makeCheckbox('Sprinkles','opt2', $record->opt2),
...              </code>
            </pre>
        </div>
        <div class="right">
            In the view:<pre>
                <code>
{heading}

&lt;form method="post" action="/generating/showme"&gt;
    {fname}
    {fsize}
    {fcup}
    Options? {fopt1} {fopt2} {fopt3}
    {fextra}
    {fmessage}
    {fsubmit}
&lt;/form&gt;
                </code>
            </pre>
        </div>
    </slide>

    <slide title="Creating Forms" layout="normal">
        <div class="left">
            <p>What can we take away from all of this?</p>
            <p>There are lots of techniques/strategies that make
                building forms easy.</p>
            <p>Can you guess which technique I use?</p>
        </div>
        <div class="right">
            <br/>
            <img class="scale" src="/pix/lessons/forms/f03.png"/>
        </div>
    </slide>


</lesson>
